name: Scaffold create-react-app
on:
  push:
  schedule:
    - cron: "0 0 * * *"
jobs:
  cra:
    runs-on: ubuntu-latest
    steps:

      # Reset the directory repository to an empty state for new CRA run
      - name: Delete everything but the `.github` repository directory
        run: |
          # Enable dotglob to make sure the glob pattern matches hidden dotfiles as well
          shopt -s dotglob

          # Walk the repository directory entries and delete everything but `.github` and `.git`
          for name in ./*
          do
            if [ $name == "./.github" ] || [ $name == "./.git" ]
            then
              continue
            fi

            rm -rf $name
          done

      # This is done temporarily to validate the above command did work as expected
      - name: Tree the repository directory to verify the deletion of everything
        run: tree -a .

      # This will also attempt to initialize a Git repository and fail (no Git
      # identity set up on the build agent) and it will install the Node NPM
      # dependencies, neither of which we can prevent due to lacking CLI options
      # Git: https://github.com/facebook/create-react-app/issues/9502
      # NPM: https://github.com/facebook/create-react-app/issues/9792
      - name: Install and scaffold create-react-app
        run: npx create-react-app cra

      # Remove the forcibly installed Node moduels through NPM
      # See https://github.com/facebook/create-react-app/issues/9792
      - name: Remove installed node_modules directory (unused in the workflow)
        run: rm -rf cra/node_modules

      # `cra/` does work on macOS but doesn't work on Ubuntu it seems
      - name: Copy the contents of `cra` out to the repository directory
        run: cp -r cra/. .

      - name: Delete the now empty `cra` directory
        run: rm cra
        
      # This is done temporarily to validate the above command did work as expected
      - name: Tree the repository directory to verify the move out of `cra`
        run: tree -a .

      - name: Commit and push the change to the GitHub repository from the agent
        run: echo TODO
